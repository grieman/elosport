files[[12]]$Date %<>% dmy()
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:11)){
files[[i]]$Date %<>% ymd()
}
for(i in c(12, length(files))){
files[[i]] %<>% dmy()
}
schedule <- do.call(rbind, files)
schedule$Date %<>% ymd()
schedule <- schedule[order(schedule$Date), ]
View(schedule)
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
schedule <- do.call(rbind, files)
View(schedule)
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
files[[12]]
files[[12]]$Date
date <- files[[12]]$Date
date %>% dmy()
files[[1:11]]
files[[1]]
for (i in c(1:11)){
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
files[[11]]
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
files[[11]]
files[[10]]
for (i in c(1:10)){
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
i = 11
dates <- files[[i]]$Date
dates
dates %>% ymd()
dates %>% dmy()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
for (i in c(11:length(files))) {
dates <- files[[i]]$Date
dates %<>% dmy()
files[[i]]$Date <- dates
}
i
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
i
i = 11
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i = i + 1
dates <- files[[i]]$Date
dates %<>% dmy()
i
dates
files[[i]]$Date
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
for (i in c(11:length(files))) {
dates <- files[[i]]$Date
dates %<>% dmy()
files[[i]]$Date <- dates
}
schedule <- do.call(rbind, files)
schedule <- schedule[order(schedule$Date), ]
team_list <- list()
for (team in schedule$Home_Team %>% unique){
print(team)
if (schedule[which(schedule$Home_Team == team), ][1, ]$Date < ymd("19880101")) {
start_elo <- 2500
} else {
start_elo <- 2000
}
team_list[[team]] <- Team$new(team, start_elo)
}
game_list <- list()
for (row in 1:nrow(schedule)) {
game_row <- schedule[row, ]
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]] <- Game$new(game_row$Date,
team_list[[game_row$Home_Team]],
team_list[[game_row$Away_Team]],
game_row$Home_Score,
game_row$Away_Score,
elo_params,
neutral_site = FALSE)
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]]$process()
}
game_row
row
Game$new(game_row$Date,
team_list[[game_row$Home_Team]],
team_list[[game_row$Away_Team]],
game_row$Home_Score,
game_row$Away_Score,
elo_params,
neutral_site = FALSE)
schedule$Away_Score %<>% as.numeric()
schedule$Away_Score
View(schedule)
schedule$Home_Score %<>% as.numeric()
schedule <- schedule[schedule$Away_Score != "[]", ]
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
for (i in c(11:length(files))) {
dates <- files[[i]]$Date
dates %<>% dmy()
files[[i]]$Date <- dates
}
schedule <- do.call(rbind, files)
schedule <- schedule[order(schedule$Date), ]
schedule <- schedule[schedule$Away_Score != "[]", ]
schedule$Away_Score %<>% as.numeric()
schedule$Home_Score %<>% as.numeric()
team_list <- list()
for (team in schedule$Home_Team %>% unique){
print(team)
if (schedule[which(schedule$Home_Team == team), ][1, ]$Date < ymd("19880101")) {
start_elo <- 2500
} else {
start_elo <- 2000
}
team_list[[team]] <- Team$new(team, start_elo)
}
game_list <- list()
for (row in 1:nrow(schedule)) {
game_row <- schedule[row, ]
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]] <- Game$new(game_row$Date,
team_list[[game_row$Home_Team]],
team_list[[game_row$Away_Team]],
game_row$Home_Score,
game_row$Away_Score,
elo_params,
neutral_site = FALSE)
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]]$process()
}
elo_plot <- ggplot()
for (team in team_list){
team$history %>% dim %>% print
elo_plot <- elo_plot + geom_line(data = team$history, aes(Date, Elo))
}
elo_plot #+ scale_color_manual()
schedule$Home_Team %>% unique
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
for (i in c(11:length(files))) {
dates <- files[[i]]$Date
dates %<>% dmy()
files[[i]]$Date <- dates
}
schedule <- do.call(rbind, files)
schedule <- schedule[order(schedule$Date), ]
schedule <- schedule[schedule$Away_Score != "[]", ]
schedule$Away_Score %<>% as.numeric()
schedule$Home_Score %<>% as.numeric()
schedule$Home_Team <- gsub('\\s+', '', schedule$Home_Team)
schedule$Away_Team <- gsub('\\s+', '', schedule$Away_Team)
team_list <- list()
for (team in schedule$Home_Team %>% unique){
print(team)
if (schedule[which(schedule$Home_Team == team), ][1, ]$Date < ymd("19880101")) {
start_elo <- 2500
} else {
start_elo <- 2000
}
team_list[[team]] <- Team$new(team, start_elo)
}
game_list <- list()
for (row in 1:nrow(schedule)) {
game_row <- schedule[row, ]
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]] <- Game$new(game_row$Date,
team_list[[game_row$Home_Team]],
team_list[[game_row$Away_Team]],
game_row$Home_Score,
game_row$Away_Score,
elo_params,
neutral_site = FALSE)
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]]$process()
}
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
for (i in c(11:length(files))) {
dates <- files[[i]]$Date
dates %<>% dmy()
files[[i]]$Date <- dates
}
schedule <- do.call(rbind, files)
schedule <- schedule[order(schedule$Date), ]
schedule <- schedule[schedule$Away_Score != "[]", ]
schedule$Away_Score %<>% as.numeric()
schedule$Home_Score %<>% as.numeric()
schedule$Home_Team <- gsub('\\s+', '', schedule$Home_Team)
schedule$Away_Team <- gsub('\\s+', '', schedule$Away_Team)
team_list <- list()
for (team in schedule$Home_Team %>% unique){
print(team)
if (schedule[which(schedule$Home_Team == team), ][1, ]$Date < ymd("19880101")) {
start_elo <- 2500
} else {
start_elo <- 2000
}
team_list[[team]] <- Team$new(team, start_elo)
}
game_list <- list()
for (row in 1:nrow(schedule)) {
game_row <- schedule[row, ]
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]] <- Game$new(game_row$Date,
team_list[[game_row$Home_Team]],
team_list[[game_row$Away_Team]],
game_row$Home_Score,
game_row$Away_Score,
elo_params,
neutral_site = FALSE)
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]]$process()
}
elo_plot <- ggplot()
for (team in team_list){
team$history %>% dim %>% print
elo_plot <- elo_plot + geom_line(data = team$history, aes(Date, Elo))
}
elo_plot #+ scale_color_manual()
View(schedule)
schedule$Home_Team %>% unique
schedule$Home_Team %>% unique %>% sort
rep("Bristol", 3)
names <- schedule$Home_Team %>% unique %>% sort
proper_names <- c(rep("Bath",2), rep("Bedford",2), rep("Bristol", 3), "Coventry", "Exeter", rep("Gloucester",3),
"Harlequins", rep("Leeds", 2), rep("Leicester", 2), "LiverpoolStHelens", "LondonIrish", "LondonScottish", "Wasps",
"LondonWelsh","Moseley", "Harlequins", rep('NewcastleFalcons',2),"NorthamptonSaints","Nottingham","Orrell",
"Richmond","RosslynPark","RotherhamTitans","RugbyLions", rep("Sale",2),"Saracens","Wasps","Waterloo","WestHartlepool","WorcesterWarriors")
names_df <- data.frame('rawname' = names, 'proper_names' = proper_names)
names_df
names_df$proper_names[match(schedule$Home_Team, names_df$rawname)]
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
for (i in c(11:length(files))) {
dates <- files[[i]]$Date
dates %<>% dmy()
files[[i]]$Date <- dates
}
schedule <- do.call(rbind, files)
schedule <- schedule[order(schedule$Date), ]
schedule <- schedule[schedule$Away_Score != "[]", ]
schedule$Away_Score %<>% as.numeric()
schedule$Home_Score %<>% as.numeric()
schedule$Home_Team <- gsub('\\s+', '', schedule$Home_Team)
schedule$Away_Team <- gsub('\\s+', '', schedule$Away_Team)
names <- schedule$Home_Team %>% unique %>% sort
proper_names <- c(rep("Bath",2), rep("Bedford",2), rep("Bristol", 3), "Coventry", "Exeter", rep("Gloucester",3),
"Harlequins", rep("Leeds", 2), rep("Leicester", 2), "LiverpoolStHelens", "LondonIrish", "LondonScottish", "Wasps",
"LondonWelsh","Moseley", "Harlequins", rep('NewcastleFalcons',2),"NorthamptonSaints","Nottingham","Orrell",
"Richmond","RosslynPark","RotherhamTitans","RugbyLions", rep("Sale",2),"Saracens","Wasps","Waterloo","WestHartlepool","WorcesterWarriors")
names_df <- data.frame('rawname' = names, 'proper_names' = proper_names)
schedule$Home_Team <- names_df$proper_names[match(schedule$Home_Team, names_df$rawname)]
schedule$Away_Team <- names_df$proper_names[match(schedule$Away_Team, names_df$rawname)]
team_list <- list()
for (team in schedule$Home_Team %>% unique){
print(team)
if (schedule[which(schedule$Home_Team == team), ][1, ]$Date < ymd("19880101")) {
start_elo <- 2500
} else {
start_elo <- 2000
}
team_list[[team]] <- Team$new(team, start_elo)
}
game_list <- list()
for (row in 1:nrow(schedule)) {
game_row <- schedule[row, ]
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]] <- Game$new(game_row$Date,
team_list[[game_row$Home_Team]],
team_list[[game_row$Away_Team]],
game_row$Home_Score,
game_row$Away_Score,
elo_params,
neutral_site = FALSE)
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]]$process()
}
elo_plot <- ggplot()
for (team in team_list){
#team$history %>% dim %>% print
elo_plot <- elo_plot + geom_line(data = team$history, aes(Date, Elo))
}
elo_plot #+ scale_color_manual()
for (team in team_list){
team$alias %>% print
team$elo_score %>% print
}
team_list[['Nottingham']]
team_list[['Nottingham']]$history
library(magrittr)
library(ggplot2)
library(lubridate)
'%nin%' <- function(x,y)!('%in%'(x,y))
elo_params <- make_elo_params(0, 20, 2.2, .001, 1, 2.2, 10)
premiership <- list()
files <- list.files(path="../data", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- lapply(files, read.csv)
for (i in c(1:10)) {
dates <- files[[i]]$Date
dates %<>% ymd()
files[[i]]$Date <- dates
}
for (i in c(11:length(files))) {
dates <- files[[i]]$Date
dates %<>% dmy()
files[[i]]$Date <- dates
}
schedule <- do.call(rbind, files)
schedule <- schedule[order(schedule$Date), ]
schedule <- schedule[schedule$Away_Score != "[]", ]
schedule$Away_Score %<>% as.numeric()
schedule$Home_Score %<>% as.numeric()
schedule$Home_Team <- gsub('\\s+', '', schedule$Home_Team)
schedule$Away_Team <- gsub('\\s+', '', schedule$Away_Team)
names <- schedule$Home_Team %>% unique %>% sort
proper_names <- c(rep("Bath",2), rep("Bedford",2), rep("Bristol", 3), "Coventry", "Exeter", rep("Gloucester",3),
"Harlequins", rep("Leeds", 2), rep("Leicester", 2), "LiverpoolStHelens", "LondonIrish", "LondonScottish", "Wasps",
"LondonWelsh","Moseley", "Harlequins", rep('NewcastleFalcons',2),"NorthamptonSaints","Nottingham","Orrell",
"Richmond","RosslynPark","RotherhamTitans","RugbyLions", rep("Sale",2),"Saracens","Wasps","Waterloo","WestHartlepool","WorcesterWarriors")
names_df <- data.frame('rawname' = names, 'proper_names' = proper_names)
schedule$Home_Team <- names_df$proper_names[match(schedule$Home_Team, names_df$rawname)]
schedule$Away_Team <- names_df$proper_names[match(schedule$Away_Team, names_df$rawname)]
team_list <- list()
for (team in schedule$Home_Team %>% unique){
print(team)
if (schedule[which(schedule$Home_Team == team), ][1, ]$Date < ymd("19880101")) {
start_elo <- 2500
} else {
start_elo <- 2000
}
team_list[[team]] <- Team$new(team, start_elo)
}
game_list <- list()
for (row in 1:nrow(schedule)) {
game_row <- schedule[row, ]
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]] <- Game$new(game_row$Date,
team_list[[game_row$Home_Team]],
team_list[[game_row$Away_Team]],
game_row$Home_Score,
game_row$Away_Score,
elo_params,
neutral_site = FALSE)
game_list[[paste0(game_row$Home_Team, game_row$Away_Team, game_row$Date)]]$process()
}
elo_plot <- ggplot()
for (team in team_list){
#team$history %>% dim %>% print
elo_plot <- elo_plot + geom_line(data = team$history, aes(Date, Elo))
}
elo_plot #+ scale_color_manual()
for (team in team_list){
team$alias %>% print
team$elo_score %>% print
}
team_list[['Nottingham']]$history
View(names_df)
team_list[['Moseley']]$history
install.packages("installr")
library(installr)
updateR()
updateR()
